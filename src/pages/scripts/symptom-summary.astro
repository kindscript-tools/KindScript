---
import fs from 'fs';
import path from 'path';
import yaml from 'js-yaml';

const filePath = path.resolve('./src/content/scripts/symptom-summary.yaml');
const fileContents = fs.readFileSync(filePath, 'utf8');
const script = yaml.load(fileContents);
---
<html>
  <head>
    <title>{script.title}</title>
    <meta charset="UTF-8" />
    <style>
      body {
        font-family: 'Segoe UI', system-ui, sans-serif;
        padding: 2rem;
        max-width: 700px;
        margin: auto;
        background-color: #fdfcf9;
        color: #222;
      }

      h1, h2, h3 {
        font-family: 'Segoe UI', system-ui, sans-serif;
        font-weight: 700;
        color: #222;
        line-height: 1.3;
        margin-bottom: 0.25rem;
      }

      .form-container {
        background: #fff6f1;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 1.5rem;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        margin-top: 1rem;
      }

      textarea, input {
        width: 100%;
        margin-top: 0.25rem;
        margin-bottom: 1rem;
        padding: 0.5rem;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      button {
        padding: 0.75rem;
        font-size: 1rem;
        background: #4a5568;
        color: #fff;
        border: none;
        border-radius: 5px;
        margin-top: 1rem;
        cursor: pointer;
      }

      button:hover {
        background: #2d3748;
      }

      .preview {
        margin-top: 0.5rem;
        margin-bottom: 1rem;
        white-space: pre-wrap;
        background: #f9f9f9;
        border: 1px solid #ccc;
        padding: 1.5rem;
        border-radius: 6px;
        line-height: 1.6;
        font-family: Georgia, serif;
        font-size: 1.1rem;
        position: relative;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.04);
      }

      label {
        font-size: 1.05rem;
        font-weight: 600;
        color: #333;
        text-shadow: 0 1px 0 #fff;
      }

      #pdf-wrapper {
        background: white;
        padding: 1rem;
      }
    </style>
  </head>
  <body>
    <h1>{script.title}</h1>
    <p>{script.description}</p>

    <section style="margin-top: 1.5rem; margin-bottom: 2rem;">
      <h2>What this tool is</h2>
      <p>This page helps you write a clear summary of what‚Äôs been going on ‚Äî symptoms, changes, questions, or needs. It‚Äôs useful for medical visits, refill requests, or hard conversations when your brain‚Äôs at capacity.</p>

      <h3>üîí Private by design</h3>
      <p>Everything you type stays on your device and never gets sent anywhere ‚Äî no servers, no databases, no tracking. Your information is processed entirely in your browser.</p>

      <h3>ü©∫ Not medical advice</h3>
      <p>This is a writing tool to help you advocate for yourself or a loved one. It isn‚Äôt a substitute for professional medical advice, diagnosis, or treatment.</p>

      <p style="margin-top: 1.75rem; margin-bottom: 1.5rem; font-weight: 500;">
        üõ†Ô∏è Ready to fill it out? <a href="#script-form" style="text-decoration: underline; color: #2b6cb0;">Jump to the form</a>
      </p>

      <h3>üìù Example output</h3>
      <blockquote style="border-left: 4px solid #ccc; padding-left: 1rem; color: #444;">
        ‚ÄúOver the past few weeks, I‚Äôve had daily fatigue and headaches that are affecting my ability to focus and work. I‚Äôve tried adjusting my sleep and reducing screen time, but it hasn‚Äôt helped. I‚Äôd like to discuss possible causes and treatment options.‚Äù
      </blockquote>
    </section>

    <hr style="border: none; border-top: 1px solid #ccc; margin: 1.25rem 0 1.5rem;" />

    <section class="form-container">
      <form id="script-form">
        {script.fields.map(field => (
          <div>
            <label for={field.name}><strong>{field.label}</strong></label>
            <textarea name={field.name} id={field.name}></textarea>
          </div>
        ))}
        <button type="button" id="generate-btn">Generate</button>
      </form>
    </section>

    <h2>Preview</h2>
    <p style="margin-top: -0.25rem; color: #555; font-size: 1rem;">
      You can copy, print, or hand this to your provider ‚Äî whatever works best.
    </p>
    <h3 style="font-size: 1.1rem; margin-top: 1rem; margin-bottom: 0.25rem;">
      üìù Generated Summary
    </h3>
    <div id="pdf-wrapper">
      <div class="preview" id="output">(Fill out the form and click Generate)</div>
    </div>

    <button type="button" id="copy-btn" style="margin-top: 0.75rem;">Copy to Clipboard</button>
    <button type="button" id="print-btn" style="margin-top: 0.25rem;">Print This</button>
    <button type="button" id="download-txt-btn" style="margin-top: 0.25rem;">Download as .txt</button>
    <button type="button" id="download-pdf-btn" style="margin-top: 0.25rem;">Download as .pdf</button>

    <script id="template-data" type="text/plain" set:html={script.template} />

    <script type="module">
      function getSummaryContent() {
        const text = document.getElementById('output').textContent;
        const today = new Date().toLocaleDateString(undefined, {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        });

        return `Symptom Summary\nDate: ${today}\n\n${text}`;
      }

      function generateOutput() {
        const form = document.getElementById('script-form');
        const data = {};
        [...form.elements].forEach(el => {
          if (el.name) data[el.name] = el.value;
        });

        const template = document.getElementById('template-data').textContent;

        const output = template
          .replace(/{{#if (.*?)}}([\s\S]*?){{\/if}}/g, (_, key, content) => {
            return data[key.trim()] ? content.replace(`{{${key.trim()}}}`, data[key.trim()]) : '';
          })
          .replace(/{{(.*?)}}/g, (_, key) => data[key.trim()] || '');

        document.getElementById('output').textContent = output;
      }

      document.getElementById('generate-btn').addEventListener('click', generateOutput);

      document.getElementById('copy-btn').addEventListener('click', () => {
        const fullText = getSummaryContent();
        navigator.clipboard.writeText(fullText).then(() => {
          alert('Copied to clipboard!');
        });
      });

      document.getElementById('print-btn').addEventListener('click', () => {
        const content = getSummaryContent();
        const printWindow = window.open('', '_blank');
        printWindow.document.write(`<pre style="font-family: Georgia, serif; font-size: 1rem; white-space: pre-wrap;">${content}</pre>`);
        printWindow.document.close();
        printWindow.print();
      });

      document.getElementById('download-txt-btn').addEventListener('click', () => {
        const content = getSummaryContent();
        const blob = new Blob([content], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'symptom-summary.txt';
        a.click();
        URL.revokeObjectURL(url);
      });

      document.getElementById('download-pdf-btn').addEventListener('click', () => {
        import('https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js')
          .then(() => {
            const outputEl = document.getElementById('output');

            // Clone it so we can add a header + date to the top
            const clone = outputEl.cloneNode(true);

            // Create a wrapper div
            const wrapper = document.createElement('div');
            wrapper.style.padding = '1rem';
            wrapper.style.fontFamily = 'Georgia, serif';
            wrapper.style.fontSize = '1rem';
            wrapper.style.lineHeight = '1.6';
            wrapper.style.whiteSpace = 'pre-wrap';

            const title = document.createElement('h2');
            title.innerText = 'Symptom Summary';
            title.style.marginTop = '0';

            const date = document.createElement('p');
            date.innerText = new Date().toLocaleDateString(undefined, {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            });
            date.style.marginBottom = '1.5rem';

            wrapper.appendChild(title);
            wrapper.appendChild(date);
            wrapper.appendChild(clone);

            document.body.appendChild(wrapper); // Must be in DOM to render correctly

            html2pdf()
              .set({
                margin: 0.5,
                filename: 'symptom-summary.pdf',
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
              })
              .from(wrapper)
              .save()
              .then(() => {
                document.body.removeChild(wrapper);
              });
          });
      });

    </script>
  </body>
</html>
